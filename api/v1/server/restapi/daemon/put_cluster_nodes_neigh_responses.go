// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// PutClusterNodesNeighCreatedCode is the HTTP code returned for type PutClusterNodesNeighCreated
const PutClusterNodesNeighCreatedCode int = 201

/*PutClusterNodesNeighCreated Created

swagger:response putClusterNodesNeighCreated
*/
type PutClusterNodesNeighCreated struct {
}

// NewPutClusterNodesNeighCreated creates PutClusterNodesNeighCreated with default headers values
func NewPutClusterNodesNeighCreated() *PutClusterNodesNeighCreated {

	return &PutClusterNodesNeighCreated{}
}

// WriteResponse to the client
func (o *PutClusterNodesNeighCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// PutClusterNodesNeighInvalidCode is the HTTP code returned for type PutClusterNodesNeighInvalid
const PutClusterNodesNeighInvalidCode int = 400

/*PutClusterNodesNeighInvalid Invalid endpoint in request

swagger:response putClusterNodesNeighInvalid
*/
type PutClusterNodesNeighInvalid struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutClusterNodesNeighInvalid creates PutClusterNodesNeighInvalid with default headers values
func NewPutClusterNodesNeighInvalid() *PutClusterNodesNeighInvalid {

	return &PutClusterNodesNeighInvalid{}
}

// WithPayload adds the payload to the put cluster nodes neigh invalid response
func (o *PutClusterNodesNeighInvalid) WithPayload(payload models.Error) *PutClusterNodesNeighInvalid {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put cluster nodes neigh invalid response
func (o *PutClusterNodesNeighInvalid) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClusterNodesNeighInvalid) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutClusterNodesNeighExistsCode is the HTTP code returned for type PutClusterNodesNeighExists
const PutClusterNodesNeighExistsCode int = 409

/*PutClusterNodesNeighExists Endpoint already exists

swagger:response putClusterNodesNeighExists
*/
type PutClusterNodesNeighExists struct {
}

// NewPutClusterNodesNeighExists creates PutClusterNodesNeighExists with default headers values
func NewPutClusterNodesNeighExists() *PutClusterNodesNeighExists {

	return &PutClusterNodesNeighExists{}
}

// WriteResponse to the client
func (o *PutClusterNodesNeighExists) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// PutClusterNodesNeighFailedCode is the HTTP code returned for type PutClusterNodesNeighFailed
const PutClusterNodesNeighFailedCode int = 500

/*PutClusterNodesNeighFailed Endpoint creation failed

swagger:response putClusterNodesNeighFailed
*/
type PutClusterNodesNeighFailed struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutClusterNodesNeighFailed creates PutClusterNodesNeighFailed with default headers values
func NewPutClusterNodesNeighFailed() *PutClusterNodesNeighFailed {

	return &PutClusterNodesNeighFailed{}
}

// WithPayload adds the payload to the put cluster nodes neigh failed response
func (o *PutClusterNodesNeighFailed) WithPayload(payload models.Error) *PutClusterNodesNeighFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put cluster nodes neigh failed response
func (o *PutClusterNodesNeighFailed) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClusterNodesNeighFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
